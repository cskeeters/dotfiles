#!/bin/bash

prompt_color="\001\e[%sm\002%s\001\e[0m\002"

function parse_hg_branch() {
    BRANCH=$(hg branch 2> /dev/null)
    if [[ $BRANCH != "" ]]; then
        REV=$(hg identify -n 2> /dev/null)
        if [[ $REV =~ ([[:digit:]]+)\+ ]]; then
            REV=${BASH_REMATCH[1]}
        fi
        BREV=$(hg identify -nr $(hg identify -b))
        STAT=$(parse_hg_dirty)

        dirty_color=34
        [[ $STAT != "" ]] && dirty_color=33

        printf $prompt_color 35 "${BRANCH}"
        printf ":"
        [[ $REV == $BREV ]] && REVCOLOR=35 || REVCOLOR=31
        printf $prompt_color $REVCOLOR "${REV}"
        printf $prompt_color 31 "${STAT}"
        printf $prompt_color $dirty_color " ☿ "
    fi
}

# get current status of hg repo
function parse_hg_dirty {
    local dirty=1 newfile=1 deleted=1 untracked=1
    while IFS= read -r -d $'\n' line; do
        [[ $line =~ ^M ]] && dirty=0
        [[ $line =~ ^A ]] && newfile=0
        [[ $line =~ ^R ]] && deleted=0
        [[ $line =~ ^\? ]] && untracked=0
    done < <(hg status 2>&1)

    indicators=''
    [[ "${newfile}" == "0" ]] && indicators="+${indicators}"
    [[ "${untracked}" == "0" ]] && indicators="?${indicators}"
    [[ "${deleted}" == "0" ]] && indicators="x${indicators}"
    [[ "${dirty}" == "0" ]] && indicators="!${indicators}"

    if [[ ! "${indicators}" == "" ]]; then
        echo " ${indicators}"
    else
        echo ""
    fi
}

# get current branch in git repo
function parse_git_branch() {
    BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
    if [ ! "${BRANCH}" == "" ]; then
        STAT=`parse_git_dirty`

        dirty_color=34
        [[ $STAT != "" ]] && dirty_color=33

        printf $prompt_color 35 "${BRANCH}"
        printf $prompt_color 31 "${STAT}"
        printf $prompt_color $dirty_color " ± "
    fi
}


# get current status of git repo
function parse_git_dirty {
    local dirty=1 untracked=1 ahead=1 newfile=1 renamed=1 deleted=1
    while IFS= read -r -d $'\n' line; do
        [[ $line =~ modified: ]] && dirty=0
        [[ $line =~ Untracked\ files ]] && untracked=0
        [[ $line =~ Your\ branch\ is\ ahead\ of ]] && ahead=0
        [[ $line =~ new\ file: ]] && newfile=0
        [[ $line =~ renamed: ]] && renamed=0
        [[ $line =~ deleted: ]] && deleted=0
    done < <(git status 2>&1)

    bits=''
    [[ "${renamed}" == "0" ]] && bits=">${bits}"
    [[ "${ahead}" == "0" ]] && bits="*${bits}"
    [[ "${newfile}" == "0" ]] && bits="+${bits}"
    [[ "${untracked}" == "0" ]] && bits="?${bits}"
    [[ "${deleted}" == "0" ]] && bits="x${bits}"
    [[ "${dirty}" == "0" ]] && bits="!${bits}"

    if [[ ! "${bits}" == "" ]]; then
        echo " ${bits}"
    else
        echo ""
    fi
}

function nonzero_return() {
    RETVAL=$?
    [[ $RETVAL -ne 0 ]] && printf $prompt_color 31 "$RETVAL "
}

export PS1="\`nonzero_return\`\[\e[35m\]\u\[\e[0m\]@\[\e[33m\]\h\[\e[0m\] \[\e[36m\]\w\[\e[0m\] \`parse_git_branch\`\`parse_hg_branch\`"
