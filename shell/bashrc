#!/bin/bash

[[ -f ~/.bash_prompt ]] && source ~/.bash_prompt
[[ -f ~/.bash_local ]] && source ~/.bash_local

exists() {
    hash $1 2>/dev/null
}

DOTFILES=$(dirname $(dirname $(realpath ~/.bashrc)))

#### Common Shell tools
umask 002

export LANG=en_US.UTF-8

# Turn on colors for ls
export CLICOLOR=1

export VISUAL='nvim'
export EDITOR=$VISUAL

export HISTCONTROL=erasedups

# Less
export LESS="FRX"

if [[ $- == *i* ]]; then
    # Setup colors in case this is a terminal
    COLOR_SCRIPT=$DOTFILES/offline/base16-shell/scripts/base16-default-dark.sh
    if [[ -r "$COLOR_SCRIPT" ]]; then
        source "$COLOR_SCRIPT"
    fi
fi

# https://support.apple.com/en-us/HT208050
export BASH_SILENCE_DEPRECATION_WARNING=1

#### Personal Settings
[[ -d ~/bin ]] && export PATH=~/bin:$PATH

# Aliases
alias cd..='cd ..'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'

alias l='ls -lh'
alias la='ls -lAh'
alias ll='ls -lh'
alias lm='ls -lhtr'

if exists exa; then
    alias l='exa -l --icons'
    alias la='exa -la --icons'
    alias ll='exa -l --icons'
    alias lm='exa -l --icons -s modified'
fi

alias vi='vim'

alias grep="grep --color --exclude-dir=.hg --exclude-dir=.git"
alias fgrep="fgrep --color --exclude-dir=.hg --exclude-dir=.git"
alias egrep="egrep --color --exclude-dir=.hg --exclude-dir=.git"

# Path
[[ -d ~/bin ]] && export PATH=~/bin:$PATH

load_all()
{
    if [[ -d "$1" ]]; then
        #-r  raw input - disables interpretion of backslash escapes and line-continuation in the read data
        #-d  <DELIM>   - recognize <DELIM> as data-end, rather than <newline>
        while IFS= read -r -d $'\0' FILE; do
            if [[ -r $FILE ]]; then
                # echo "Sourcing $FILE"
                . "$FILE"
            fi
        done < <(find $1 -type f -print0)
    fi
}

# Load OS specific configuration
load_all "$DOTFILES/shell/bashrc.d-$(uname)"
# Load host specific configuration
load_all "$DOTFILES/shell/bashrc.d-$(hostname -s)"

#### Neovim
if exists nvim; then
    alias vi='nvim'
    alias vim='nvim'
fi

#### Rust Language
# export PATH="$HOME/.cargo/bin:$PATH"

#### Asciidoc
# export XML_CATALOG_FILES=/usr/local/etc/xml/catalog

#### FZF Jumping

fzf_project_jump() {
    D=$(cat $HOME/.paths | fzf -d '	' --with-nth 2,3,4,5,6 --bind 'enter:execute(echo {1})+abort')
    # D=$(fzf --bind 'enter:execute(echo {1})+abort')
    if [[ $D != "" ]]; then
        printf 'builtin cd -- %q' "$D"
    fi
}

if [[ -t 1 ]]; then
    if exists fzf; then
        if [[ -f ~/.fzf.sh ]]; then
            source ~/.fzf.sh

            bind -m emacs-standard '"\ej": "`fzf_project_jump`\e\C-e\C-m"'

            if exists ag; then
                export FZF_DEFAULT_COMMAND='ag -g ""'
                _fzf_compgen_path() {
                    ag -g "" "$1"
                }
            fi
        fi
    fi
fi

#### git

alias G='git'

if exists git; then
    function gd() {
        git diff ${1}~ ${1}
    }

    _gd()
    {
        local REFS=$(git log --pretty=format:'%h' --abbrev-commit --date=relative --all)
        local CUR=${COMP_WORDS[COMP_CWORD]}
        COMPREPLY=( $(compgen -W "$REFS" -- $CUR) )
    }
    complete -F _gd gd
fi



#### Fuzzy Style File Completion
#
# With autojump, this is not necessary
#
#if exists _cd; then
#    # Enable fuzzy style completions
#    [[ -f ~/.completions ]] && source ~/.completions
#fi

# vim:ft=sh
