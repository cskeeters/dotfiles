prompt_color="\001\e[%sm\002%s\001\e[0m\002"

function parse_hg_branch() {
    BRANCH=$(hg branch 2> /dev/null)
    if [[ $BRANCH != "" ]]; then
        STAT=$(parse_hg_dirty)
        echo -n "["
        printf $prompt_color 35 "${BRANCH}"
        printf $prompt_color 31 "${STAT}"
        echo -n "] "
        printf $prompt_color 33 "☿ "
    fi
}

# get current status of hg repo
function parse_hg_dirty {
    status=`hg status 2>&1 | tee`
    dirty=`echo -n "${status}" 2> /dev/null | egrep "^[MAD\?] " &> /dev/null; echo "$?"`
    untracked=`echo -n "${status}" 2> /dev/null | grep "^\? " &> /dev/null; echo "$?"`
    newfile=`echo -n "${status}" 2> /dev/null | grep "^A " &> /dev/null; echo "$?"`
    deleted=`echo -n "${status}" 2> /dev/null | grep "^D " &> /dev/null; echo "$?"`
    indicators=''
    if [ "${newfile}" == "0" ]; then
        indicators="+${indicators}"
    fi
    if [ "${untracked}" == "0" ]; then
        indicators="?${indicators}"
    fi
    if [ "${deleted}" == "0" ]; then
        indicators="x${indicators}"
    fi
    if [ "${dirty}" == "0" ]; then
        indicators="!${indicators}"
    fi
    if [ ! "${indicators}" == "" ]; then
        echo " ${indicators}"
    else
        echo ""
    fi
}

# get current branch in git repo
function parse_git_branch() {
    BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
    if [ ! "${BRANCH}" == "" ]; then
        STAT=`parse_git_dirty`
        echo -n "["
        printf $prompt_color 35 "${BRANCH}"
        printf $prompt_color 31 "${STAT}"
        echo -n "] "
        printf $prompt_color 33 "± "
    fi
}


# get current status of git repo
function parse_git_dirty {
    status=`git status 2>&1 | tee`
    dirty=`echo -n "${status}" 2> /dev/null | grep "modified:" &> /dev/null; echo "$?"`
    untracked=`echo -n "${status}" 2> /dev/null | grep "Untracked files" &> /dev/null; echo "$?"`
    ahead=`echo -n "${status}" 2> /dev/null | grep "Your branch is ahead of" &> /dev/null; echo "$?"`
    newfile=`echo -n "${status}" 2> /dev/null | grep "new file:" &> /dev/null; echo "$?"`
    renamed=`echo -n "${status}" 2> /dev/null | grep "renamed:" &> /dev/null; echo "$?"`
    deleted=`echo -n "${status}" 2> /dev/null | grep "deleted:" &> /dev/null; echo "$?"`
    bits=''
    if [ "${renamed}" == "0" ]; then
        bits=">${bits}"
    fi
    if [ "${ahead}" == "0" ]; then
        bits="*${bits}"
    fi
    if [ "${newfile}" == "0" ]; then
        bits="+${bits}"
    fi
    if [ "${untracked}" == "0" ]; then
        bits="?${bits}"
    fi
    if [ "${deleted}" == "0" ]; then
        bits="x${bits}"
    fi
    if [ "${dirty}" == "0" ]; then
        bits="!${bits}"
    fi
    if [ ! "${bits}" == "" ]; then
        echo " ${bits}"
    else
        echo ""
    fi
}

function nonzero_return() {
    RETVAL=$?
    [ $RETVAL -ne 0 ] && printf $prompt_color 31 "$RETVAL "
}

export PS1="\`nonzero_return\`\[\e[36m\]\w\[\e[0m\] \`parse_git_branch\`\`parse_hg_branch\`"
